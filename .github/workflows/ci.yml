name: CI/CD Pipeline

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main, production ]

jobs:
  # Basic checks that run on all branches
  lint-and-build:
    name: Lint and Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Type check
      run: npx tsc --noEmit
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 1

  # Unit tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run unit tests
      run: npm run test
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: always()
      with:
        files: ./coverage/lcov.info
        fail_ci_if_error: false

  # Function tests (test Netlify Functions locally)
  function-tests:
    name: Function Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install function dependencies
      run: cd netlify/functions && npm ci
      
    - name: Install Netlify CLI
      run: npm install -g netlify-cli
      
    - name: Test functions locally
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        QLOO_API_KEY: ${{ secrets.QLOO_API_KEY }}
      run: |
        # Start Netlify dev in background
        netlify dev --port 8888 &
        NETLIFY_PID=$!
        
        # Wait for server to start
        sleep 30
        
        # Run function tests
        NETLIFY_DEV=true node test-taste-api.js
        
        # Clean up
        kill $NETLIFY_PID
      timeout-minutes: 10

  # E2E tests with Playwright
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [lint-and-build]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install function dependencies
      run: cd netlify/functions && npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Install Netlify CLI
      run: npm install -g netlify-cli
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/
        
    - name: Start application and run E2E tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        QLOO_API_KEY: ${{ secrets.QLOO_API_KEY }}
      run: |
        # Start Netlify dev in background
        netlify dev --port 8888 &
        NETLIFY_PID=$!
        
        # Wait for server to start
        sleep 30
        
        # Run E2E tests
        npm run test:e2e
        
        # Clean up
        kill $NETLIFY_PID
      timeout-minutes: 15
      
    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 7

  # Security and dependency checks
  security-checks:
    name: Security Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level=high
      
    - name: Check for known vulnerabilities
      run: npx audit-ci --config .audit-ci.json
      continue-on-error: true

  # Integration tests (API testing)
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.base_ref == 'production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install function dependencies
      run: cd netlify/functions && npm ci
      
    - name: Install Netlify CLI
      run: npm install -g netlify-cli
      
    - name: Run comprehensive integration tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        QLOO_API_KEY: ${{ secrets.QLOO_API_KEY }}
      run: |
        # Start Netlify dev in background
        netlify dev --port 8888 &
        NETLIFY_PID=$!
        
        # Wait for server to start
        sleep 30
        
        # Run comprehensive API tests
        NETLIFY_DEV=true node test-plan-flow.js
        NETLIFY_DEV=true node test-taste-api.js
        
        # Clean up
        kill $NETLIFY_PID
      timeout-minutes: 20

  # Production readiness check
  production-readiness:
    name: Production Readiness Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.base_ref == 'production'
    needs: [lint-and-build, unit-tests, function-tests, e2e-tests, security-checks, integration-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Production build verification
      run: |
        npm run build
        
        # Verify critical files exist
        test -f dist/index.html
        test -d netlify/functions
        test -f netlify.toml
        
        # Verify function files
        test -f netlify/functions/taste.js
        test -f netlify/functions/health.js
        test -f netlify/functions/plan-day.js
        test -f netlify/functions/ecosystem-analysis.js
        
        echo "‚úÖ Production build verification passed"
        
    - name: Environment validation
      run: |
        # Check that required secrets are available (without exposing them)
        if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
          echo "‚ùå OPENAI_API_KEY secret is missing"
          exit 1
        fi
        
        if [ -z "${{ secrets.QLOO_API_KEY }}" ]; then
          echo "‚ùå QLOO_API_KEY secret is missing"
          exit 1
        fi
        
        echo "‚úÖ Required environment variables are configured"
        
    - name: Performance check
      run: |
        # Build size check
        BUILD_SIZE=$(du -sh dist/ | cut -f1)
        echo "Build size: $BUILD_SIZE"
        
        # Function size check
        FUNCTION_SIZE=$(du -sh netlify/functions/ | cut -f1)
        echo "Functions size: $FUNCTION_SIZE"
        
        echo "‚úÖ Performance check completed"

  # Deployment status update (runs after merge to production)
  deployment-notification:
    name: Deployment Notification
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production' && github.event_name == 'push'
    
    steps:
    - name: Notify deployment start
      run: |
        echo "üöÄ Production deployment triggered"
        echo "Commit: ${{ github.sha }}"
        echo "Author: ${{ github.actor }}"
        echo "Netlify will automatically deploy this to production" 